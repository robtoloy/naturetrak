// https://gist.github.com/adamcbrewer/6539726
.text-shadow (@string: 0 1px 3px rgba(0, 0, 0, 0.25)) {
	text-shadow: @string;
}
.box-shadow (@string) {
	-webkit-box-shadow: @string;
	-moz-box-shadow:    @string;
	box-shadow:         @string;
}
.drop-shadow (@x: 0, @y: 1px, @blur: 2px, @spread: 0, @alpha: 0.25) {
	-webkit-box-shadow:	@x @y @blur @spread rgba(0, 0, 0, @alpha);
	-moz-box-shadow:	@x @y @blur @spread rgba(0, 0, 0, @alpha);
	box-shadow:		@x @y @blur @spread rgba(0, 0, 0, @alpha);
}
.inner-shadow (@x: 0, @y: 1px, @blur: 2px, @spread: 0, @alpha: 0.25) {
	-webkit-box-shadow: inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
	-moz-box-shadow:    inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
	box-shadow:         inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
}
.box-sizing (@type: border-box) {
	-webkit-box-sizing: @type;
	-moz-box-sizing:    @type;
	box-sizing:         @type;
}
.border-radius (@radius: 5px) {
	-webkit-border-radius: @radius;
	-moz-border-radius:    @radius;
	border-radius:         @radius;

	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}
.border-radiuses (@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
	-webkit-border-top-right-radius:    @topright;
	-webkit-border-bottom-right-radius: @bottomright;
	-webkit-border-bottom-left-radius:  @bottomleft;
	-webkit-border-top-left-radius:     @topleft;

	-moz-border-radius-topright:        @topright;
	-moz-border-radius-bottomright:     @bottomright;
	-moz-border-radius-bottomleft:      @bottomleft;
	-moz-border-radius-topleft:         @topleft;

	border-top-right-radius:            @topright;
	border-bottom-right-radius:         @bottomright;
	border-bottom-left-radius:          @bottomleft;
	border-top-left-radius:             @topleft;

	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}
.opacity (@opacity: 0.5) {
	-webkit-opacity: 	@opacity;
	-moz-opacity: 		@opacity;
	opacity: 		@opacity;
}
.gradient (@startColor: #eee, @endColor: white) {
	background-color: @startColor;
	background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
	background: -webkit-linear-gradient(top, @startColor, @endColor);
	background: -moz-linear-gradient(top, @startColor, @endColor);
	background: -ms-linear-gradient(top, @startColor, @endColor);
	background: -o-linear-gradient(top, @startColor, @endColor);
}
.horizontal-gradient (@startColor: #eee, @endColor: white) {
 	background-color: @startColor;
	background-image: -webkit-gradient(linear, left top, right top, from(@startColor), to(@endColor));
	background-image: -webkit-linear-gradient(left, @startColor, @endColor);
	background-image: -moz-linear-gradient(left, @startColor, @endColor);
	background-image: -ms-linear-gradient(left, @startColor, @endColor);
	background-image: -o-linear-gradient(left, @startColor, @endColor);
}
.animation (@name, @duration: 300ms, @delay: 0, @ease: ease) {
	-webkit-animation: @name @duration @delay @ease;
	-moz-animation:    @name @duration @delay @ease;
	-ms-animation:     @name @duration @delay @ease;
}
.transition (@transition) {
	-webkit-transition: @transition;
	-moz-transition:    @transition;
	-ms-transition:     @transition;
	-o-transition:      @transition;
}
.transform(@string){
	-webkit-transform: @string;
	-moz-transform: 	 @string;
	-ms-transform: 		 @string;
	-o-transform: 		 @string;
}
.scale (@factor) {
	-webkit-transform: scale(@factor);
	-moz-transform: 	 scale(@factor);
	-ms-transform: 		 scale(@factor);
	-o-transform: 		 scale(@factor);
}
.rotate (@deg) {
	-webkit-transform: rotate(@deg);
	-moz-transform: 	 rotate(@deg);
	-ms-transform: 		 rotate(@deg);
	-o-transform: 		 rotate(@deg);
}
.skew (@deg, @deg2) {
	-webkit-transform:       skew(@deg, @deg2);
	-moz-transform: 	 skew(@deg, @deg2);
	-ms-transform: 		 skew(@deg, @deg2);
	-o-transform: 		 skew(@deg, @deg2);
}
.translate (@x, @y:0) {
	-webkit-transform:       translate(@x, @y);
	-moz-transform: 	 translate(@x, @y);
	-ms-transform: 		 translate(@x, @y);
	-o-transform: 		 translate(@x, @y);
}
.translate3d (@x, @y: 0, @z: 0) {
	-webkit-transform:       translate3d(@x, @y, @z);
	-moz-transform: 	 translate3d(@x, @y, @z);
	-ms-transform: 		 translate3d(@x, @y, @z);
	-o-transform: 		 translate3d(@x, @y, @z);
}
.perspective (@value: 1000) {
	-webkit-perspective: 	@value;
	-moz-perspective: 	@value;
	-ms-perspective: 	@value;
	perspective: 		@value;
}
.transform-origin (@x:center, @y:center) {
	-webkit-transform-origin: @x @y;
	-moz-transform-origin:    @x @y;
	-ms-transform-origin:     @x @y;
	-o-transform-origin:      @x @y;
}

.h(@percent){height: @percent;}
.w(@percent){width: @percent;}

.maxh(@percent){max-height: @percent;}
.maxw(@percent){max-width: @percent;}

.minh(@percent){min-height: @percent;}
.minw(@percent){min-width: @percent;}

.text-c {text-align: center;}
.text-l {text-align: left;}
.text-r {text-align: right;}

.opacity(@value){opacity: @value;}

.none {display: none;}

.absolute {position: absolute;}
.fixed    {position: fixed;}
.relative {position: relative;}

.index(@value0){index: @value;}

#backToTop {
    width: 40px;
    height: 40px;
    line-height: 52px;
    overflow: hidden;
    z-index: 9999;
    display: none;
    position: fixed;
    bottom: 50px;
    right: 12px;
    background-color: #d0ddd5;
    color: #6f8b7c;
    text-align: center;
    font-size: 30px;
    text-decoration: none;
    border-radius: 20px;
    -webkit-transition: all 0.2s;
    transition: all 0.2s;
}
#backToTop:hover {
    background-color: #323f38;
    color: #d0ddd5;
    -webkit-transition: all 0.2s;
    transition: all 0.2s;
}

.m-0-a {margin: 0 auto;}

// http://aslanbakan.com/en/blog/less-space-responsive-css-margin-and-padding-helper-classes/
//====================================
//              FOR LOOP             =
//====================================
.for(@i, @n) {
  .-each(@i)
}

.for(@n) when (isnumber(@n)) {
  .for(1, @n)
}

.for(@i, @n) when not (@i =@n) {
  .for((@i + (@n - @i) / abs(@n - @i)), @n);
}
//--------  End of for loop  ---------//



//=========================================
//              FOR EACH LOOP             =
//=========================================
.for(@array) when (default()) {
  .for-impl_(length(@array))
}

.for-impl_(@i) when (@i > 1) {
  .for-impl_((@i - 1))
}

.for-impl_(@i) when (@i > 0) {
  .-each(extract(@array, @i))
}
//--------  End of for each loop  ---------//

@screen-xs: 0;
@screen-sm: 480px;
@screen-md: 768px;
@screen-lg: 992px;
@screen-xl: 1600px;
@values-array: 0, 5, 10, 15, 20, 25, 30, 40, 45, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 225, 250, 275, 300, 400, 500;
// global
@media (min-width: @screen-xs) {.make-space(@prefix: xs);}
// mobile
@media (min-width: @screen-sm) {.make-space(@prefix: sm);}
// tablet
@media (min-width: @screen-md) {.make-space(@prefix: md);}
// desktop
@media (min-width: @screen-lg) {.make-space(@prefix: lg);}
// large screens
@media (min-width: @screen-xl) {.make-space(@prefix: xl);}
// init functions
.make-space(@prefix) {
  .for(@values-array);
  .-each(@value) {
    .@{prefix}-p-@{value}   { padding:        ~"@{value}px"; }
    .@{prefix}-pt-@{value}  { padding-top:    ~"@{value}px"; }
    .@{prefix}-pl-@{value}  { padding-left:   ~"@{value}px"; }
    .@{prefix}-pr-@{value}  { padding-right:  ~"@{value}px"; }
    .@{prefix}-pb-@{value}  { padding-bottom: ~"@{value}px"; }
    .@{prefix}-m-@{value}   { margin:         ~"@{value}px"; }
    .@{prefix}-mt-@{value}  { margin-top:     ~"@{value}px"; }
    .@{prefix}-ml-@{value}  { margin-left:    ~"@{value}px"; }
    .@{prefix}-mr-@{value}  { margin-right:   ~"@{value}px"; }
    .@{prefix}-mb-@{value}  { margin-bottom:  ~"@{value}px"; }

  }
}
